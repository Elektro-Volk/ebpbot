--[[
    –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –±–æ—Ç–∞ –ø–æ —Ç–∏–ø—É "–±–æ—Ç —Å –∫–æ–º–∞–Ω–¥–∞–º–∏".
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
        –ë–æ—Ç —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–æ—á–∫—É –≤—Ö–æ–¥–∞, –≤–∞–º –ª–∏—à—å –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ
    —á–∞—Å—Ç–∏ –∏ —ç–ª–µ–º–µ–Ω—Ç—ã –±–æ—Ç–∞.
        NameSystem.botNames = { '–æ–±—Ä–∞—â–µ–Ω–∏—è', '–∫_–±–æ—Ç—É', '–≤_–Ω–∏–∂–Ω–µ–º_—Ä–µ–≥–∏—Å—Ç—Ä–µ' };
        Bot.executes = { CommandsSystem.Execute, CmdNotFound, ... };
]]

local function dolist (list, ...)
    for i = 1, #list do local res = list[i](...); if res==false then return false end end
    return true
end

local module = {}
module.check_list = {} -- –ï—Å–ª–∏ —Ö–æ—Ç—å –æ–¥–Ω–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π –≤–µ—Ä–Ω–µ—Ç false, —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.
module.pre_list = {} -- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
module.executes = {} -- –¢—É—Ç –æ–±—Ö–æ–¥–∏–º —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º RMSG.
module.post_list = {} -- –¢–∞–∫ –∂–µ. –û–¥–∏–Ω false, –∏ –Ω–∏—á–µ–≥–æ —Å–ª–∞—Ç—å –Ω–µ –±—É–¥–µ–º.
module.all_post_list = {} -- –≠—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ –≤—Å–µ—Ö –ø–æ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π. –ü–æ—Å—Ç –ø–æ—Å—Ç —Ñ—É–Ω–∫—Ü–∏—è :D
module.post_send_list = {} -- –≠—Ç–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è

function module.add_check    (f) table.insert(module.check_list    , f) end
function module.add_pre      (f) table.insert(module.pre_list      , f) end
function module.add_post     (f) table.insert(module.post_list     , f) end
function module.add_all_post (f) table.insert(module.all_post_list , f) end
function module.add_post_send(f) table.insert(module.post_send_list, f) end

function module.process_message(msg)
    local user = db.get_user(msg.from_id)
    local other = { clock = os.clock() }

    console.log(ischat(msg) and (msg.peer_id - 2000000000)..'|'..msg.from_id or msg.from_id, msg.text or '[NULL]')

    if not dolist (module.pre_list, msg, other, user) then return end

    -- –ü–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º RMSG –º—ã –±—É–¥–µ–º –æ–±—Ö–æ–¥–∏—Ç—å —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏
    local rmsg
    for i = 1,#module.executes do
        rmsg = module.executes[i](msg, other, user)
        if rmsg then break end
    end
    if not rmsg then return end -- –¢–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏.

    if not dolist (module.post_list, msg, other, user, rmsg) then return end
    if not dolist (module.all_post_list, msg, other, user, rmsg) then return end

    -- –®–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    rmsg.peer_id = msg.peer_id
    local result = VK.messages.send(rmsg)
    local time = math.floor(1000*(os.clock()-other.clock))
    console.log(
        string.format("I: %s; T: %i ms.",result.response or 'E' .. result.error.error_code, time),
        rmsg.message and (rmsg.message:find '\n' and rmsg.message:split('\n')[1]..'...' or rmsg.message) or '-'
    )
    
	if not dolist (module.post_send_list, msg, other, user) then return end
end

vk_events['message_new'] = function (msg)
    if msg.from_id < 0 then return end -- –ù–∞ –≥—Ä—É–ø–ø—ã –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º, –º—ã –Ω–µ —É–º–µ–µ–º —Å –Ω–∏–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å.
    -- –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —á–µ–∫–ª–∏—Å—Ç–∞–º. –¢–∞–º –æ–±—ã—á–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –±–æ—Ç—É –∏ –ø—Ä–æ—á–∞—è —Ñ–∏–≥–Ω—è.
    if not dolist (module.check_list, msg) then return end

    status, err = pcall(module.process_message, msg) -- –ù–µ–∫–∏–π try catch –≤ Lua.
	if not status and err then
        console.error("MSG", err)
        VK.messages.send {
            peer_id = admin,
            message = string.format(
                "&#9888; –í –≤–∞—à–µ–º –±–æ—Ç–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞<br>&#9940; %s<br>&#127773; %s [%s]<br>üñä %s",
                err, "vk.com/id"..msg.from_id, msg.peer_id, msg.text or '[NULL]'
            )
        }
        resp(msg, "&#9888; –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —É–∂–µ –∑–Ω–∞–µ—Ç –æ–± —ç—Ç–æ–º!")
    end
end

return module
